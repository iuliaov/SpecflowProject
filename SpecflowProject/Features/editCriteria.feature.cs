// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecflowProject.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Team Health Check criteria edit")]
    public partial class TeamHealthCheckCriteriaEditFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "editCriteria.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Team Health Check criteria edit", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit single criterion")]
        [NUnit.Framework.CategoryAttribute("tc:79887")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("Quality of processes", "check", "edited", null)]
        [NUnit.Framework.TestCaseAttribute("Communication", "check", "edited", null)]
        [NUnit.Framework.TestCaseAttribute("Speed of work", "check", "edited", null)]
        [NUnit.Framework.TestCaseAttribute("Goals alignment", "check", "edited", null)]
        [NUnit.Framework.TestCaseAttribute("Product quality", "check", "edited", null)]
        [NUnit.Framework.TestCaseAttribute("Quality of processes", "x", "not edited", null)]
        [NUnit.Framework.TestCaseAttribute("Communication", "x", "not edited", null)]
        [NUnit.Framework.TestCaseAttribute("Speed of work", "x", "not edited", null)]
        [NUnit.Framework.TestCaseAttribute("Goals alignment", "x", "not edited", null)]
        [NUnit.Framework.TestCaseAttribute("Product quality", "x", "not edited", null)]
        public void EditSingleCriterion(string criteria, string button, string state, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79887",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria",
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("criteria", criteria);
            argumentsOfScenario.Add("button", button);
            argumentsOfScenario.Add("state", state);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit single criterion", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
        testRunner.Given("user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 8
        testRunner.And("is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
        testRunner.When("user clicks edit button next to <criterion>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
        testRunner.And("inserts \"lorem ipsum\" in the criterion input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
        testRunner.And(string.Format("clicks {0}", button), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
        testRunner.Then(string.Format("the criterion is {0}", state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit multiple criteria - valid data")]
        [NUnit.Framework.CategoryAttribute("tc:79888")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", "-", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "-", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "-", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "-", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("-", "lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        public void EditMultipleCriteria_ValidData(string qualityOfProcesses, string communication, string speedOfWork, string goalsAlignment, string productQuality, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79888",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria",
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Quality of processes", qualityOfProcesses);
            argumentsOfScenario.Add("Communication", communication);
            argumentsOfScenario.Add("Speed of work", speedOfWork);
            argumentsOfScenario.Add("Goals alignment", goalsAlignment);
            argumentsOfScenario.Add("Product quality", productQuality);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit multiple criteria - valid data", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 29
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 30
        testRunner.Given("user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 31
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
        testRunner.And("is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
        testRunner.When("user edits multiple criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
        testRunner.And("clicks check button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
        testRunner.Then("the criteria are edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit multiple criteria - invalid data")]
        [NUnit.Framework.CategoryAttribute("tc:79889")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.TestCaseAttribute("", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Quality of processes", "Communication", "Speed of work", "Goals alignment", "", null)]
        [NUnit.Framework.TestCaseAttribute("Quality of processes", "Communication", "Speed of work", "", "Product quality", null)]
        [NUnit.Framework.TestCaseAttribute("Quality of processes", "Communication", "", "Goals alignment", "Product quality", null)]
        [NUnit.Framework.TestCaseAttribute("Quality of processes", "", "Speed of work", "Goals alignment", "Product quality", null)]
        [NUnit.Framework.TestCaseAttribute("", "Communication", "Speed of work", "Goals alignment", "Product quality", null)]
        public void EditMultipleCriteria_InvalidData(string qualityOfProcesses, string communication, string speedOfWork, string goalsAlignment, string productQuality, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79889",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria",
                    "negative"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Quality of processes", qualityOfProcesses);
            argumentsOfScenario.Add("Communication", communication);
            argumentsOfScenario.Add("Speed of work", speedOfWork);
            argumentsOfScenario.Add("Goals alignment", goalsAlignment);
            argumentsOfScenario.Add("Product quality", productQuality);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit multiple criteria - invalid data", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 48
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 49
        testRunner.Given("user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 50
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
        testRunner.And("is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
        testRunner.When("user removes title for multiple criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 53
        testRunner.And("clicks check button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
        testRunner.Then("the criteria aren\'t edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit criteria after first vote")]
        [NUnit.Framework.CategoryAttribute("tc:79890")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        public void EditCriteriaAfterFirstVote()
        {
            string[] tagsOfScenario = new string[] {
                    "tc:79890",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit criteria after first vote", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 67
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 68
        testRunner.Given("manager user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 69
        testRunner.And("staff user is logged in with staff credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
        testRunner.And("staff and manager user joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
        testRunner.And("are on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
        testRunner.When("staff user votes for all criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 73
        testRunner.Then("edit criteria button disapears for manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
        testRunner.And("the criteria can\'t be edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vote for edited criteria")]
        [NUnit.Framework.CategoryAttribute("tc:79891")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", "-", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "-", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "-", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "-", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("-", "lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        public void VoteForEditedCriteria(string qualityOfProcesses, string communication, string speedOfWork, string goalsAlignment, string productQuality, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79891",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Quality of processes", qualityOfProcesses);
            argumentsOfScenario.Add("Communication", communication);
            argumentsOfScenario.Add("Speed of work", speedOfWork);
            argumentsOfScenario.Add("Goals alignment", goalsAlignment);
            argumentsOfScenario.Add("Product quality", productQuality);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vote for edited criteria", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 78
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 79
        testRunner.Given("manager user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 80
        testRunner.And("staff user is logged in with staff credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
        testRunner.And("staff and manager user joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
        testRunner.And("are on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
        testRunner.When("manager user edits multiple criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 84
        testRunner.And("staff user votes for all edited criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
        testRunner.Then("all votes for the edited criteria are registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
        testRunner.And("are visible for the manager and staff user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Staff user edit button visibility")]
        [NUnit.Framework.CategoryAttribute("tc:79892")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        public void StaffUserEditButtonVisibility()
        {
            string[] tagsOfScenario = new string[] {
                    "tc:79892",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Staff user edit button visibility", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 99
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 100
        testRunner.Given("user is logged in with staff credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 101
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
        testRunner.When("user is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
        testRunner.Then("the edit criteria button is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit criteria button presence in View past retro meeting")]
        [NUnit.Framework.CategoryAttribute("tc:79893")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.CategoryAttribute("View")]
        public void EditCriteriaButtonPresenceInViewPastRetroMeeting()
        {
            string[] tagsOfScenario = new string[] {
                    "tc:79893",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria",
                    "View"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit criteria button presence in View past retro meeting", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 107
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 108
        testRunner.Given("user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 109
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
        testRunner.And("is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 111
        testRunner.When("user saves the meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
        testRunner.And("user views the saved meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
        testRunner.Then("the edit criteria button is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edited criteria presence in View past retro meeting")]
        [NUnit.Framework.CategoryAttribute("tc:79894")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.CategoryAttribute("View")]
        public void EditedCriteriaPresenceInViewPastRetroMeeting()
        {
            string[] tagsOfScenario = new string[] {
                    "tc:79894",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria",
                    "View"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edited criteria presence in View past retro meeting", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 117
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 118
        testRunner.Given("user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 119
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
        testRunner.And("is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "Quality of processes",
                            "Communication",
                            "Speed of work",
                            "Goals alignment",
                            "Product quality"});
                table2.AddRow(new string[] {
                            "lorem ipsum",
                            "lorem ipsum",
                            "lorem ipsum",
                            "lorem ipsum",
                            "lorem ipsum"});
#line 121
        testRunner.And("user edits all criteria", ((string)(null)), table2, "And ");
#line hidden
#line 124
        testRunner.When("user saves the meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 125
        testRunner.And("user views the saved meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
        testRunner.Then("the edit criteria button is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Remove criteria")]
        [NUnit.Framework.CategoryAttribute("tc:79904")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.TestCaseAttribute("manager", null)]
        [NUnit.Framework.TestCaseAttribute("staff", null)]
        public void RemoveCriteria(string credentials, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79904",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria",
                    "negative"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("credentials", credentials);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove criteria", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 130
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 131
        testRunner.Given(string.Format("user is logged in with {0}", credentials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 132
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 133
        testRunner.And("is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 134
        testRunner.When("user tries to remove criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 135
        testRunner.Then("No delete criteria button is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 136
        testRunner.And("criteria can\'t be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add criteria")]
        [NUnit.Framework.CategoryAttribute("tc:79905")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.TestCaseAttribute("manager", null)]
        [NUnit.Framework.TestCaseAttribute("staff", null)]
        public void AddCriteria(string credentials, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79905",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria",
                    "negative"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("credentials", credentials);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add criteria", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 145
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 146
        testRunner.Given(string.Format("user is logged in with {0}", credentials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 147
        testRunner.And("joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 148
        testRunner.And("is on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 149
        testRunner.When("user tries to add criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 150
        testRunner.Then("No add criteria button is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
        testRunner.And("criteria can\'t be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit criteria sync")]
        [NUnit.Framework.CategoryAttribute("tc:79906")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("editCriteria")]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", "-", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "lorem ipsum", "-", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "lorem ipsum", "-", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("lorem ipsum", "-", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        [NUnit.Framework.TestCaseAttribute("-", "lorem ipsum", "lorem ipsum", "lorem ipsum", "lorem ipsum", null)]
        public void EditCriteriaSync(string qualityOfProcesses, string communication, string speedOfWork, string goalsAlignment, string productQuality, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79906",
                    "retro",
                    "teamHealthCheck",
                    "editCriteria"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Quality of processes", qualityOfProcesses);
            argumentsOfScenario.Add("Communication", communication);
            argumentsOfScenario.Add("Speed of work", speedOfWork);
            argumentsOfScenario.Add("Goals alignment", goalsAlignment);
            argumentsOfScenario.Add("Product quality", productQuality);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit criteria sync", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 160
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 161
        testRunner.Given("manager user is logged in with manager credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 162
        testRunner.And("staff user is logged in with staff credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 163
        testRunner.And("staff and manager user joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 164
        testRunner.And("are on team health check template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
        testRunner.When("manager user edits multiple criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
        testRunner.Then("staff user sees the updaded criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
