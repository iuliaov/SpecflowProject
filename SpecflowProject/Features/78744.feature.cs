// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecflowProject.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Stand-up Notes")]
    public partial class Stand_UpNotesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "78744.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Stand-up Notes", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check send notes button functionality")]
        [NUnit.Framework.CategoryAttribute("tc:79464")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("sendButton")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "a", "enabled", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "a", "enabled", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "a", "enabled", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "\"  \"", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "\"  \"", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "\"  \"", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "Лорем ипсум", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "Лорем ипсум", "disabled", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "Лорем ипсум", "disabled", null)]
        public void CheckSendNotesButtonFunctionality(string user_Email, string user_Password, string input, string send_Button_State, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79464",
                    "standup",
                    "notes",
                    "sendButton"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            argumentsOfScenario.Add("input", input);
            argumentsOfScenario.Add("send_button_state", send_Button_State);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check send notes button functionality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 8
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
        testRunner.And(string.Format("the user writes {0} in the notes input field", input), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
        testRunner.Then(string.Format("the send button is {0}", send_Button_State), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if manager, admin and staff users can write notes in an active stand-up mee" +
            "ting")]
        [NUnit.Framework.CategoryAttribute("tc:79465")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "a", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "a", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "a", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "#$%^&*()_-+=/?.,<>;:\"\'{}[]~`|", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "#$%^&*()_-+=/?.,<>;:\"\'{}[]~`|", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "#$%^&*()_-+=/?.,<>;:\"\'{}[]~`|", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "A sentence is the basic unit of language which expresses a complete thought.", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "A sentence is the basic unit of language which expresses a complete thought.", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "A sentence is the basic unit of language which expresses a complete thought.", null)]
        public void CheckIfManagerAdminAndStaffUsersCanWriteNotesInAnActiveStand_UpMeeting(string user_Email, string user_Password, string input, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79465",
                    "standup",
                    "notes",
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            argumentsOfScenario.Add("input", input);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if manager, admin and staff users can write notes in an active stand-up mee" +
                    "ting", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 28
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 29
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 30
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
        testRunner.And(string.Format("the user writes {0} in the notes input field", input), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
        testRunner.And("clicks the send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
        testRunner.Then("the message is displayed in the notes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
        testRunner.And("the time of sending matches the current time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if manager, admin and staff users can write 700 chars notes in an active st" +
            "and-up meeting")]
        [NUnit.Framework.CategoryAttribute("tc:79466")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", null)]
        public void CheckIfManagerAdminAndStaffUsersCanWrite700CharsNotesInAnActiveStand_UpMeeting(string user_Email, string user_Password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79466",
                    "standup",
                    "notes",
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if manager, admin and staff users can write 700 chars notes in an active st" +
                    "and-up meeting", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 50
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 51
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 52
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 54
        testRunner.And(@"the user writes ""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in pharetra tortor. Sed suscipit justo metus, finibus mattis sem suscipit sit amet. Nam porta, ipsum et ornare ullamcorper, erat elit maximus arcu, et fermentum elit nulla vel sem. Ut condimentum mattis erat id commodo. Curabitur tincidunt at orci non porttitor. Mauris dignissim rhoncus augue in pretium. In volutpat sit amet dolor in hendrerit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec vel eleifend dui. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent in justo ut massa rutrum sodales sit amet id enim. Phasellus lacinia tellus."" in the notes input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
        testRunner.And("clicks the send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
        testRunner.Then("the message is displayed in the notes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
        testRunner.And("the time of sending matches the current time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if messages in stand-up meeting are synchronised")]
        [NUnit.Framework.CategoryAttribute("tc:79467")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("sync")]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "manager@amdaris.com", "amdaris", "staff@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "staff@amdaris.com", "amdaris", "admin@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "manager@amdaris.com", "amdaris", "admin@amdaris.com", "amdaris", null)]
        public void CheckIfMessagesInStand_UpMeetingAreSynchronised(string user_Email1, string user_Password1, string user_Email2, string user_Password2, string user_Email3, string user_Password3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79467",
                    "standup",
                    "notes",
                    "positive",
                    "sync"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email1", user_Email1);
            argumentsOfScenario.Add("user_password1", user_Password1);
            argumentsOfScenario.Add("user_email2", user_Email2);
            argumentsOfScenario.Add("user_password2", user_Password2);
            argumentsOfScenario.Add("user_email3", user_Email3);
            argumentsOfScenario.Add("user_password3", user_Password3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if messages in stand-up meeting are synchronised", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 66
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 67
        testRunner.Given(string.Format("User 1 is logged in with {0} and {1}", user_Email1, user_Password1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 68
        testRunner.And(string.Format("User 2 is logged in with {0} and {1}", user_Email2, user_Password2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 69
        testRunner.And(string.Format("User 3 is logged in with {0} and {1}", user_Email3, user_Password3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
        testRunner.And("User 1, User 2 and User 3 join the same active stand-up meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
        testRunner.When("User 1 inserts \"Lorem ipsum\" in the notes input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 72
        testRunner.And("User 1 clicks the send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
        testRunner.Then("The message is displayed in the notes section for User 2 and User 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
        testRunner.And("The name of the author matches User\'s 1 name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if users recieve notifications for new messages")]
        [NUnit.Framework.CategoryAttribute("tc:79468")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("sync")]
        [NUnit.Framework.CategoryAttribute("notification")]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "manager@amdaris.com", "amdaris", "staff@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "staff@amdaris.com", "amdaris", "admin@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "manager@amdaris.com", "amdaris", "admin@amdaris.com", "amdaris", null)]
        public void CheckIfUsersRecieveNotificationsForNewMessages(string user_Email1, string user_Password1, string user_Email2, string user_Password2, string user_Email3, string user_Password3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79468",
                    "standup",
                    "notes",
                    "positive",
                    "sync",
                    "notification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email1", user_Email1);
            argumentsOfScenario.Add("user_password1", user_Password1);
            argumentsOfScenario.Add("user_email2", user_Email2);
            argumentsOfScenario.Add("user_password2", user_Password2);
            argumentsOfScenario.Add("user_email3", user_Email3);
            argumentsOfScenario.Add("user_password3", user_Password3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if users recieve notifications for new messages", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 84
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 85
        testRunner.Given(string.Format("User 1 is logged in with {0} and {1}", user_Email1, user_Password1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 86
        testRunner.And(string.Format("User 2 is logged in with {0} and {1}", user_Email2, user_Password2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
        testRunner.And(string.Format("User 3 is logged in with {0} and {1}", user_Email3, user_Password3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
        testRunner.And("User 1, User 2 and User 3 join the same active stand-up meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
        testRunner.When(@"User 1 sends in notes ""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in pharetra tortor. Sed suscipit justo metus, finibus mattis sem suscipit sit amet. Nam porta, ipsum et ornare ullamcorper, erat elit maximus arcu, et fermentum elit nulla vel sem. Ut condimentum mattis erat id commodo."" twice", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
        testRunner.Then("The messages are displayed in the notes section for User 2 and User 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
        testRunner.And("User 2 and User 3 recieve a new message notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if manager, admin and staff users can write notes in an active stand-up mee" +
            "ting 1")]
        [NUnit.Framework.CategoryAttribute("tc:79469")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "\"  \"", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "\"  \"", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "\"  \"", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "Лорем ипсум", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "Лорем ипсум", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "Лорем ипсум", null)]
        public void CheckIfManagerAdminAndStaffUsersCanWriteNotesInAnActiveStand_UpMeeting1(string user_Email, string user_Password, string input, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79469",
                    "standup",
                    "notes",
                    "negative"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            argumentsOfScenario.Add("input", input);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if manager, admin and staff users can write notes in an active stand-up mee" +
                    "ting 1", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 102
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 103
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 104
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 106
        testRunner.And(string.Format("the user writes {0} in the notes input field", input), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
        testRunner.Then("the user can\'t send the message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check reply to notes functionality in stand-up meeting")]
        [NUnit.Framework.CategoryAttribute("tc:79470")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("reply")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", null)]
        public void CheckReplyToNotesFunctionalityInStand_UpMeeting(string user_Email, string user_Password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79470",
                    "standup",
                    "notes",
                    "reply",
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check reply to notes functionality in stand-up meeting", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 123
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 124
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 125
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 127
        testRunner.And("the user writes \"something\" in the notes input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
        testRunner.And("the user clicks the send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
        testRunner.And("the user right clicks on the message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
        testRunner.Then("the reply button is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 131
        testRunner.And("the reply button is clickable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 132
        testRunner.And("the reply to message window is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if users can reply to notes in stand-up meeting")]
        [NUnit.Framework.CategoryAttribute("tc:79471")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("reply")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "a", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "a", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "a", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "#$%^&*()_-+=/?.,<>;:\"\'{}[]~`|", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "#$%^&*()_-+=/?.,<>;:\"\'{}[]~`|", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "#$%^&*()_-+=/?.,<>;:\"\'{}[]~`|", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "A sentence is the basic unit of language which expresses a complete thought.", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "A sentence is the basic unit of language which expresses a complete thought.", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "A sentence is the basic unit of language which expresses a complete thought.", null)]
        public void CheckIfUsersCanReplyToNotesInStand_UpMeeting(string user_Email, string user_Password, string input, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79471",
                    "standup",
                    "notes",
                    "reply",
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            argumentsOfScenario.Add("input", input);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if users can reply to notes in stand-up meeting", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 141
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 142
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 143
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 144
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 145
        testRunner.And("the user writes \"something\" in the notes input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 146
        testRunner.And("the user clicks the send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
        testRunner.And("the user right clicks on the message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 148
        testRunner.And("the user clicks on reply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 149
        testRunner.And(string.Format("the user replies to the message with {0}", input), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 150
        testRunner.Then("the reply is displayed in the notes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
        testRunner.And("the original message is referencend", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 152
        testRunner.And("the time of sending matches the current time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if users can reply to notes in stand-up meeting - 700 chars")]
        [NUnit.Framework.CategoryAttribute("tc:79472")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("reply")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", null)]
        public void CheckIfUsersCanReplyToNotesInStand_UpMeeting_700Chars(string user_Email, string user_Password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79472",
                    "standup",
                    "notes",
                    "reply",
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if users can reply to notes in stand-up meeting - 700 chars", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 167
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 168
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 169
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 170
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 171
        testRunner.And("the user writes \"something\" in the notes input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 172
        testRunner.And("the user clicks the send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
        testRunner.And("the user right clicks on the message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 174
        testRunner.And("the user clicks on reply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
        testRunner.And(@"the user replies with ""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in pharetra tortor. Sed suscipit justo metus, finibus mattis sem suscipit sit amet. Nam porta, ipsum et ornare ullamcorper, erat elit maximus arcu, et fermentum elit nulla vel sem. Ut condimentum mattis erat id commodo. Curabitur tincidunt at orci non porttitor. Mauris dignissim rhoncus augue in pretium. In volutpat sit amet dolor in hendrerit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec vel eleifend dui. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent in justo ut massa rutrum sodales sit amet id enim. Phasellus lacinia tellus.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
        testRunner.Then("the reply is displayed in the notes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 177
        testRunner.And("the original message is referencend", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
        testRunner.And("the time of sending matches the current time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if messages in stand-up meeting are synchronised 1")]
        [NUnit.Framework.CategoryAttribute("tc:79473")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("reply")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("sync")]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "manager@amdaris.com", "amdaris", "staff@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "staff@amdaris.com", "amdaris", "admin@amdaris.com", "amdaris", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "manager@amdaris.com", "amdaris", "admin@amdaris.com", "amdaris", null)]
        public void CheckIfMessagesInStand_UpMeetingAreSynchronised1(string user_Email1, string user_Password1, string user_Email2, string user_Password2, string user_Email3, string user_Password3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79473",
                    "standup",
                    "notes",
                    "reply",
                    "positive",
                    "sync"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email1", user_Email1);
            argumentsOfScenario.Add("user_password1", user_Password1);
            argumentsOfScenario.Add("user_email2", user_Email2);
            argumentsOfScenario.Add("user_password2", user_Password2);
            argumentsOfScenario.Add("user_email3", user_Email3);
            argumentsOfScenario.Add("user_password3", user_Password3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if messages in stand-up meeting are synchronised 1", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 187
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 188
        testRunner.Given(string.Format("User 1 is logged in with {0} and {1}", user_Email1, user_Password1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 189
        testRunner.And(string.Format("User 2 is logged in with {0} and {1}", user_Email2, user_Password2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 190
        testRunner.And(string.Format("User 3 is logged in with {0} and {1}", user_Email3, user_Password3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 191
        testRunner.And("User 1, User 2 and User 3 join the same active stand-up meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 192
        testRunner.When(@"User 1 sends ""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in pharetra tortor. Sed suscipit justo metus, finibus mattis sem suscipit sit amet. Nam porta, ipsum et ornare ullamcorper, erat elit maximus arcu, et fermentum elit nulla vel sem. Ut condimentum mattis erat id commodo."" in the notes input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 193
        testRunner.And("User 2 replies \"Lorem ipsum\" to User 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 194
        testRunner.And("User 3 replies \"Lorem ipsum\" to User 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 195
        testRunner.Then("The messages are displayed in the notes section for User 2 and User 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 196
        testRunner.And("The name of the authors matches User\'s name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 197
        testRunner.And("User 1, User 2, User 3 recieve new message notifications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if users can reply to notes in stand-up meeting 1")]
        [NUnit.Framework.CategoryAttribute("tc:79474")]
        [NUnit.Framework.CategoryAttribute("standup")]
        [NUnit.Framework.CategoryAttribute("notes")]
        [NUnit.Framework.CategoryAttribute("reply")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "\"  \"", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "\"  \"", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "\"  \"", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "", null)]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "Лорем ипсум", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "Лорем ипсум", null)]
        [NUnit.Framework.TestCaseAttribute("admin@amdaris.com", "amdaris", "Лорем ипсум", null)]
        public void CheckIfUsersCanReplyToNotesInStand_UpMeeting1(string user_Email, string user_Password, string input, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79474",
                    "standup",
                    "notes",
                    "reply",
                    "negative"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            argumentsOfScenario.Add("input", input);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if users can reply to notes in stand-up meeting 1", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 207
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 208
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 209
        testRunner.And("the user is on \"http://localhost:3000/project/1/daily\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 210
        testRunner.When("the user joins an active meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 211
        testRunner.And("the user writes \"something\" in the notes input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 212
        testRunner.And("the user clicks the send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 213
        testRunner.And("the user right clicks on the message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 214
        testRunner.And("the user clicks on reply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 215
        testRunner.And(string.Format("the user replies to the message with {0}", input), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 216
        testRunner.Then("the user can\'t send the reply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
