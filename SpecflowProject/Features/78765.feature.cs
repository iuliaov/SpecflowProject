// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecflowProject.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Team Health Check reveal button")]
    public partial class TeamHealthCheckRevealButtonFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "78765.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Team Health Check reveal button", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check reveal results button visibility for all project role types")]
        [NUnit.Framework.CategoryAttribute("tc:79638")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("revealButton")]
        [NUnit.Framework.TestCaseAttribute("manager@amdaris.com", "amdaris", "displayed", "clickable", null)]
        [NUnit.Framework.TestCaseAttribute("staff@amdaris.com", "amdaris", "not displayed", "not clickable", null)]
        public void CheckRevealResultsButtonVisibilityForAllProjectRoleTypes(string user_Email, string user_Password, string visibility, string clickability, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79638",
                    "retro",
                    "teamHealthCheck",
                    "revealButton"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("user_email", user_Email);
            argumentsOfScenario.Add("user_password", user_Password);
            argumentsOfScenario.Add("visibility", visibility);
            argumentsOfScenario.Add("clickability", clickability);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check reveal results button visibility for all project role types", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
        testRunner.Given(string.Format("the user is logged with {0} and {1}", user_Email, user_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
        testRunner.And("the user joined an active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 8
        testRunner.And("the user is on the team health check template page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
        testRunner.When("the user views the team health check page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
        testRunner.And("the user clicks on reveal results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
        testRunner.Then(string.Format("the reveal results button is {0}", visibility), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 12
        testRunner.And(string.Format("the reveal results button is {0}", clickability), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if manager sees the voting live")]
        [NUnit.Framework.CategoryAttribute("tc:79639")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("liveVotes")]
        [NUnit.Framework.CategoryAttribute("sync")]
        [NUnit.Framework.TestCaseAttribute("Good", "Normal", "Bad", "Good", "Normal", "improving", null)]
        [NUnit.Framework.TestCaseAttribute("Normal", "Bad", "Good", "Normal", "Normal", "constant", null)]
        public void CheckIfManagerSeesTheVotingLive(string criterion1, string criterion2, string criterion3, string criterion4, string criterion5, string projection, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79639",
                    "retro",
                    "teamHealthCheck",
                    "liveVotes",
                    "sync"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("criterion 1", criterion1);
            argumentsOfScenario.Add("criterion 2", criterion2);
            argumentsOfScenario.Add("criterion 3", criterion3);
            argumentsOfScenario.Add("criterion 4", criterion4);
            argumentsOfScenario.Add("criterion 5", criterion5);
            argumentsOfScenario.Add("projection", projection);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if manager sees the voting live", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 20
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 21
        testRunner.Given("Manager is logged in with \"manager@amdaris.com\" email and \"amdaris\" password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 22
        testRunner.And("Staff user 1 is logged in with \"staff@amdaris.com\" email and \"amdaris\" password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
        testRunner.And("Staff user 2 is logged in with \"olivia@amdaris.com\" email and \"amdaris\" password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
        testRunner.And("Manager, Staff user 1 and Staff user 2 join the same active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
        testRunner.And("Manager, Staff user 1 and Staff user 2 are on the team health check template page" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
        testRunner.When("Staff User 1 votes for all criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
        testRunner.And("Staff User 2 votes for all criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
        testRunner.Then("Manager sees Staff User\'s 1 and User\'s 2 votes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
        testRunner.And("Staff user 2 doesn\'t see Staff User\'s 1 votes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
        testRunner.And("Staff user 1 doesn\'t see Staff User\'s 2 votes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check reveal results synchronization for all users in meeting")]
        [NUnit.Framework.CategoryAttribute("tc:79640")]
        [NUnit.Framework.CategoryAttribute("retro")]
        [NUnit.Framework.CategoryAttribute("teamHealthCheck")]
        [NUnit.Framework.CategoryAttribute("revealButton")]
        [NUnit.Framework.CategoryAttribute("sync")]
        [NUnit.Framework.TestCaseAttribute("Good", "Normal", "Bad", "Good", "Normal", "improving", null)]
        [NUnit.Framework.TestCaseAttribute("Normal", "Bad", "Good", "Normal", "Normal", "constant", null)]
        public void CheckRevealResultsSynchronizationForAllUsersInMeeting(string criterion1, string criterion2, string criterion3, string criterion4, string criterion5, string projection, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tc:79640",
                    "retro",
                    "teamHealthCheck",
                    "revealButton",
                    "sync"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("criterion 1", criterion1);
            argumentsOfScenario.Add("criterion 2", criterion2);
            argumentsOfScenario.Add("criterion 3", criterion3);
            argumentsOfScenario.Add("criterion 4", criterion4);
            argumentsOfScenario.Add("criterion 5", criterion5);
            argumentsOfScenario.Add("projection", projection);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check reveal results synchronization for all users in meeting", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 38
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 39
        testRunner.Given("Manager is logged in with \"manager@amdaris.com\" email and \"amdaris\" password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
        testRunner.And("Staff user 1 is logged in with \"staff@amdaris.com\" email and \"amdaris\" password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
        testRunner.And("Staff user 2 is logged in with \"olivia@amdaris.com\" email and \"amdaris\" password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
        testRunner.And("Manager, Staff user 1 and Staff user 2 join the same active retro meeting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
        testRunner.And("Manager, Staff user 1 and Staff user 2 are on the team health check template page" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
       testRunner.When("Staff User 1 votes for all criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 45
        testRunner.And("Staff User 2 votes for all criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
        testRunner.And("Manager votes for all criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
        testRunner.And("Manager clicks reveal results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
        testRunner.Then("Manager sees all submited votes correct sequence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
        testRunner.And("Staff user 2 sees all submited votes in correct sequence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
        testRunner.And("Staff user 1 sees all submited votes in correct sequence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
